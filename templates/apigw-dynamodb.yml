---
AWSTemplateFormatVersion: "2010-09-09"

Resources:
  DynamodbFromApigwRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "dynamodbFromApigw"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: [
                  "dynamodb:GetItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:Query",
                  "dynamodb:Scan"
                ]
                Resource: "*"
  GetUsers:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ApiGatewayResourceApiUsers
      HttpMethod: GET
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref ApiGatewayAuthorizer
      Integration:
        IntegrationHttpMethod: POST
        Credentials: !GetAtt DynamodbFromApigwRole.Arn
        Type: AWS
        Uri: !Sub "arn:aws:apigateway:${self:provider.region}:dynamodb:action/Scan"
        RequestTemplates:
          application/json: >-
            {
              "TableName": "${self:service}-${self:provider.stage}-users"
            }
        IntegrationResponses:
          - ResponseTemplates:
              application/json: >-
                #set($items = $input.path('$'))
                [
                  #foreach($item in $items.Items)
                  {
                  #foreach($entry in $item.entrySet())
                  #set($next=$entry.value.entrySet().iterator().next())
                  #set($value=$next.value)
                  #set($type=$next.key)
                  #if($type == "N")
                    "$entry.key": $value
                  #elseif($type == "BOOL")
                    "$entry.key": $value
                  #elseif($type == "S")
                    "$entry.key": "$value"
                  #else
                    "$entry.key": ""
                  #end
                  #if($foreach.hasNext),#end
                  #end
                  }
                  #if($foreach.hasNext),#end
                  #end
                ]
            StatusCode: 200
          - ResponseTemplates:
              application/json: >-
                {
                  "message": "Unauthorized"
                }
            StatusCode: 401
            SelectionPattern: 400
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
